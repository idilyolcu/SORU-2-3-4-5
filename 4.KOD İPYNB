{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "histogram = {  \n",
    "100: 12, 101: 18, 102: 32, 103: 48, 104: 52, 105: 65, 106: 55, 107: 42,\n",
    "108: 32, 109: 16, 110: 10, 140: 5, 141: 18, 142: 25, 143: 32, 144: 40,\n",
    "145: 65, 146: 43, 147: 32, 148: 20, 149: 10, 150: 4  \n",
    "}\n",
    "\n",
    "T0 = 100  \n",
    "threshold = 1\n",
    "\n",
    "def calculate_means(hist, threshold):  \n",
    "sum_G1, sum_G2 = 0, 0  \n",
    "count_G1, count_G2 = 0, 0  \n",
    "for intensity, count in hist.items():  \n",
    "if intensity \\> T0:  \n",
    "sum_G1 += intensity \\* count  \n",
    "count_G1 += count  \n",
    "else:  \n",
    "sum_G2 += intensity \\* count  \n",
    "count_G2 += count  \n",
    "m1 = sum_G1 / count_G1 if count_G1 != 0 else 0 m2 = sum_G2 / count_G2 if\n",
    "count_G2 != 0 else 0 return m1, m2\n",
    "\n",
    "while True:  \n",
    "m1, m2 = calculate_means(histogram, T0) T1 = (m1 + m2) / 2  \n",
    "if abs(T1 - T0) \\< threshold:  \n",
    "break  \n",
    "T0 = T1\n",
    "\n",
    "print(f\"Optimum eşik değeri: {T1}\")  \n",
    "print(\"Yoğunluk Değeri Piksel Sayısı\")  \n",
    "for intensity, count in histogram.items():  \n",
    "print(f\"{intensity:4} {count:16}\")"
   ],
   "id": "42a14256-91c8-446e-92a7-ab6bf11055d3"
  }
 ],
 "nbformat": 4,
 "nbformat_minor": 5,
 "metadata": {}
}
